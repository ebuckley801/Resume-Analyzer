"""Initial migration

Revision ID: 7cdb8de59932
Revises: 
Create Date: 2025-02-02 09:35:07.627450

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import Text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7cdb8de59932'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_descriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('raw_text', sa.Text(), nullable=False),
    sa.Column('analysis_data', postgresql.JSONB(astext_type=Text()).with_variant(postgresql.JSON(astext_type=Text()), 'sqlite'), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('job_descriptions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_descriptions_content_hash'), ['content_hash'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=256), nullable=False),
    sa.Column('processed_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_data', postgresql.JSONB(astext_type=Text()).with_variant(postgresql.JSON(astext_type=Text()), 'sqlite'), nullable=False),
    sa.Column('resume_text', sa.Text(), nullable=False),
    sa.Column('job_description_text', sa.Text(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('analysis_version', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('upload_id', sa.Integer(), nullable=True),
    sa.Column('job_description_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('score >= 0 AND score <= 1', name='valid_score_range'),
    sa.ForeignKeyConstraint(['job_description_id'], ['job_descriptions.id'], ),
    sa.ForeignKeyConstraint(['upload_id'], ['uploads.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_analysis_results_job_description_id'), ['job_description_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_upload_id'), ['upload_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analysis_results_user_id'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_upload_id'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_job_description_id'))

    op.drop_table('analysis_results')
    op.drop_table('uploads')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('job_descriptions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_descriptions_content_hash'))

    op.drop_table('job_descriptions')
    # ### end Alembic commands ###
