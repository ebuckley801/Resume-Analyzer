// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  uploads   Upload[]
  analyses  ResumeAnalysis[]
  jobs      JobAnalysis[]
  feedback  Feedback[]

  @@map("users")
}

model Upload {
  id          Int      @id @default(autoincrement())
  userId      Int?     @map("user_id")
  fileId      String   @unique @default(uuid()) @map("file_id")
  fileName    String   @map("file_name")
  fileType    String   @map("file_type")
  uploadTime  DateTime @default(now()) @map("upload_time")
  user        User?    @relation(fields: [userId], references: [id])
  analysis    ResumeAnalysis?
  feedback    Feedback?

  @@map("uploads")
}

model ResumeAnalysis {
  id            Int      @id @default(autoincrement())
  userId        Int?     @map("user_id")
  fileId        String   @unique @map("file_id")
  skills        String
  experience    String
  education     String
  processedTime DateTime @default(now()) @map("processed_time")
  user          User?    @relation(fields: [userId], references: [id])
  upload        Upload   @relation(fields: [fileId], references: [fileId])

  @@map("resume_analysis")
}

model JobAnalysis {
  id              Int      @id @default(autoincrement())
  userId          Int?     @map("user_id")
  jobId           String   @unique @default(uuid()) @map("job_id")
  requiredSkills  String   @map("required_skills")
  preferredSkills String   @map("preferred_skills")
  industryType    String   @map("industry_type")
  processedTime   DateTime @default(now()) @map("processed_time")
  user            User?    @relation(fields: [userId], references: [id])
  feedback        Feedback?

  @@map("job_analysis")
}

model Feedback {
  id              Int      @id @default(autoincrement())
  userId          Int?     @map("user_id")
  fileId          String   @unique @map("file_id")
  jobId           String   @unique @map("job_id")
  matchScore      Int      @map("match_score")
  missingSkills   String   @map("missing_skills")
  improvementTips String   @map("improvement_tips")
  processedTime   DateTime @default(now()) @map("processed_time")
  user            User?    @relation(fields: [userId], references: [id])
  upload          Upload   @relation(fields: [fileId], references: [fileId])
  jobAnalysis     JobAnalysis @relation(fields: [jobId], references: [jobId])

  @@map("feedback")
}


