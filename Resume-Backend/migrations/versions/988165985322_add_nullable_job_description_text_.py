"""Add nullable job_description_text column to analysis_results

Revision ID: 988165985322
Revises: d1760d5d1f21
Create Date: 2025-04-23 16:20:12.674806

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '988165985322'
down_revision = 'd1760d5d1f21'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_prisma_migrations')
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_description_text', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('industry', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('analysis_version', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('job_description_id', sa.Integer(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_analysis_results_job_description_id'), ['job_description_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_upload_id'), ['upload_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_user_id'), ['user_id'], unique=False)
        batch_op.drop_constraint('analysis_results_upload_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('analysis_results_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('analysis_results_job_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'uploads', ['upload_id'], ['id'])
        batch_op.create_foreign_key(None, 'job_descriptions', ['job_description_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('job_id')

    with op.batch_alter_table('job_descriptions', schema=None) as batch_op:
        batch_op.alter_column('content_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('job_descriptions_content_hash_key')
        batch_op.create_index(batch_op.f('ix_job_descriptions_content_hash'), ['content_hash'], unique=True)
        batch_op.drop_constraint('job_descriptions_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('uploads', schema=None) as batch_op:
        batch_op.alter_column('filename',
               existing_type=sa.TEXT(),
               type_=sa.String(length=256),
               existing_nullable=False)
        batch_op.alter_column('processed_text',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('uploads_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(length=256),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('reset_token',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.drop_index('users_email_key')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_index('users_email_key', ['email'], unique=True)
        batch_op.alter_column('reset_token',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('uploads', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('uploads_user_id_fkey', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('processed_text',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('filename',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('job_descriptions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('job_descriptions_user_id_fkey', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.drop_index(batch_op.f('ix_job_descriptions_content_hash'))
        batch_op.create_index('job_descriptions_content_hash_key', ['content_hash'], unique=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('content_hash',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('analysis_results_job_id_fkey', 'job_descriptions', ['job_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
        batch_op.create_foreign_key('analysis_results_user_id_fkey', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
        batch_op.create_foreign_key('analysis_results_upload_id_fkey', 'uploads', ['upload_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.drop_index(batch_op.f('ix_analysis_results_user_id'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_upload_id'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_job_description_id'))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_column('job_description_id')
        batch_op.drop_column('analysis_version')
        batch_op.drop_column('industry')
        batch_op.drop_column('score')
        batch_op.drop_column('job_description_text')

    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='_prisma_migrations_pkey')
    )
    # ### end Alembic commands ###
